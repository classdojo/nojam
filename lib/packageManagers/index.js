// Generated by CoffeeScript 1.4.0
(function() {
  var JAM, NPM, async;

  NPM = require("./npm");

  JAM = require("./jam");

  async = require("async");

  module.exports = (function() {
    /*
    */

    function _Class(binName) {
      this.binName = binName;
      this.packageManagers = {
        npm: new NPM(),
        jam: new JAM()
      };
      this._all = Object.keys(this.packageManagers);
    }

    /*
    */


    _Class.prototype.install = function(packages, cb) {
      var _this = this;
      if (cb == null) {
        cb = (function() {});
      }
      return async.forEach(packages, (function(pkg, next) {
        var pm, pmanagers;
        pmanagers = _this._all;
        pm = pkg.split(":");
        if (pm.length === 2) {
          pmanagers = [pm.shift()];
          pkg = pm.shift();
        } else {
          pkg = pm.shift();
        }
        return _this._exec(pmanagers, ["install", pkg], false, next);
      }), cb);
    };

    /*
    */


    _Class.prototype.upgrade = function(cb) {
      if (cb == null) {
        cb = (function() {});
      }
      return this._exec(this._all, ["upgrade"], true, callback);
    };

    /*
    */


    _Class.prototype.clearCache = function(cb) {
      if (cb == null) {
        cb = (function() {});
      }
      return this._exec(this._all, ["clearCache"], true, cb);
    };

    /*
    */


    _Class.prototype._exec = function(packageManagers, args, runAll, callback) {
      var next,
        _this = this;
      next = function() {
        var arg, packageManager;
        packageManager = _this.packageManagers[packageManagers.shift()];
        if (!packageManager) {
          return callback();
        }
        arg = args.concat();
        return packageManager[arg.shift()].call(packageManager, arg, function(err, result) {
          if (!err && !runAll) {
            return callback(err, result);
          }
          return next();
        });
      };
      return next();
    };

    return _Class;

  })();

}).call(this);
